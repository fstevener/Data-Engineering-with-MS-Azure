{
    "name": "DF_EmpMaster",
    "properties": {
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "dataset": {
                        "referenceName": "DS_EmpMaster_DataLakeGen2",
                        "type": "DatasetReference"
                    },
                    "name": "sourceempmaster"
                }
            ],
            "sinks": [
                {
                    "dataset": {
                        "referenceName": "DS_NYCPayrollEMPMD_AzureSQLDatabase",
                        "type": "DatasetReference"
                    },
                    "name": "sinkempmaster"
                }
            ],
            "transformations": [],
            "scriptLines": [
                "source(output(",
                "          EmployeeID as string,",
                "          LastName as string,",
                "          FirstName as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false) ~> sourceempmaster",
                "sourceempmaster sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     input(",
                "          EmployeeID as string,",
                "          LastName as string,",
                "          FirstName as string",
                "     ),",
                "     deletable:false,",
                "     insertable:true,",
                "     updateable:false,",
                "     upsertable:false,",
                "     format: 'table',",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true,",
                "     errorHandlingOption: 'stopOnFirstError',",
                "     mapColumn(",
                "          EmployeeID,",
                "          LastName,",
                "          FirstName",
                "     )) ~> sinkempmaster"
            ]
        }
    }
}